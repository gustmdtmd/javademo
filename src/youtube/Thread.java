package youtube;

public class Thread {

	public static void main(String[] args) {
		/*
		    프로세스와 쓰레드
		     -프로세스 : 실행중인 프로그램, 자원과 쓰레드로 구성
		     -쓰레드 : 프로세스 내에서 실제 작업을 수행
		            모든 프로세스는 최소한 하나의 쓰레드를 가지고 있다.
		               프로세스 : 쓰레드 = 공장 : 일꾼
		       "하나의 새로운 프로세스를 생성하는 것보다
		          하나의 새로운 쓰레드를 생성하는 것이 더 적은 비용이 든다."
		    
		    멀티쓰레드의 장단점
		     -대부분의 프로그램이 멀티쓰레드로 작성되고 있다.
		      그러나, 멀티쓰레드 프로그래밍은 장점만 있는 것이 아니다.
		      -장점: 시스템 자원을 보다 효율적으로 사용할 수 있다.
		            사용자에 대한 응답성이 향상된다.
		            작업이 분리되어 코드가 간결해진다.
		      -단점: 동기화에 주의해야한다.
		            교착상태가 발생하지 않도록 주의해야한다.
		            각 쓰레드가 효욜적으로 고르게 실행될 수 있게 해야한다.
		    
		    쓰레드의 구현과 실행
		     1. Thread클래스 상속
		        상속 - 쓰레드 생성 - 쓰레드 실행 (start())
		     2. Runnable인터페이스를 구형
		        구현 - 인터페이스 생성 및 쓰레드 생성 - 쓰레드 실행(start()) 
		        
		    쓰레드의 실행 - start()
		     -쓰레드를 생성한 후에 start()를 호출해야 쓰레드가 작업을 시작한다.
		      주의 - 먼저 start() 했다고 순서가 먼저인게 아니다.
		          - start() 했다고 즉시 실행되는게 아니다. 
		    
		*/

	}

}
